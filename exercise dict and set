üîπ Ejercicio 1: Frecuencia de elementos (Diccionarios)
Escrib√≠ una funci√≥n que reciba una lista de palabras y devuelva un diccionario con la cantidad de veces que aparece cada palabra.

def contar_palabras(lista):
    count = {}

    for i in lista:
        count[i] = count.get(i, 0) + 1

    print(count)


print(contar_palabras(["hola", "mundo", "hola", "python", "mundo", "hola"]))

üîπ Ejercicio 2: Palabra √∫nicas (Conjuntos)
Escrib√≠ una funci√≥n que reciba dos listas de palabras y devuelvan un conjunto con las palabras que est√°n en la primera lista pero no en la segunda.

def palabras_unicas(lista1, lista2):
    set1 = set(lista1)
    set2 = set(lista2)
    
    set3 = set1.difference(set2)
    return set3
    
    
print(palabras_unicas(["rojo", "azul", "verde"], ["azul", "negro"]))

üîπ Ejercicio 3: N√∫meros √∫nicos (Conjuntos)
Escrib√≠ una funci√≥n que devuelva un conjunto con los n√∫meros que aparecen solo una vez en la lista.
def numeros_unicos(lista):
    conjunto = {}
    unicos = set()
    for i in lista:
        conjunto[i] = conjunto.get(i, 0) + 1
        
    for numero, cantidad in conjunto.items():
        if cantidad == 1:
           unicos.add(numero)
        
    return unicos
    
           
    
print(numeros_unicos([1, 2, 3, 2, 4, 5, 1, 6]))

üîπ Ejercicio 4 - Recuento de edades (Diccionarios y tuplas)
Ten√©s una lista de tuplas, donde cada tupla representa a una persona con su nombre y su edad.
Escrib√≠ una funci√≥n que devuelva un diccionario con la edad como clave y la cantidad de personas con esa edad como valor.

def contar_edades(tupla):
    count = {}

    for i in tupla:
        edad = i[1]
        count[edad] = count.get(edad, 0) + 1

    return count

personas = [
    ("Ana", 25),
    ("Luis", 30),
    ("Carlos", 25),
    ("Mar√≠a", 22),
    ("Pedro", 30),
    ("Luc√≠a", 25)
]

print(contar_edades(personas))


üîπ Ejercicio 5 - Inventario de productos (Diccionarios y listas)
Ten√©s una lista de productos vendidos, cada uno representado como una tupla con el nombre y la cantidad vendida. Escrib√≠ una funci√≥n que devuelva un diccionario con el nombre del producto como clave y la cantidad total vendida como valor.


def venta(productos):
    count = {}
    
    for name, cant in productos:
        count[name] = count.get(name, 0) + cant
        
        
    return count
    
 
ventas = [
    ("manzana", 3),
    ("banana", 2),
    ("manzana", 1),
    ("pera", 4),
    ("banana", 1)
]

print(venta(ventas))


üîπ Ejercicio 6 - Buscar personas por edad (Diccionarios y listas)
Escrib√≠ una funci√≥n que reciba una lista de tuplas como esta:

def buscar_person(lista):
    count = {}
    
    for name, age in lista:
        if age not in count:
           count[age] = []
        count[age].append(name)
         
        
    return count
    
personas = [
    ("Ana", 25),
    ("Luis", 30),
    ("Carlos", 25),
    ("Mar√≠a", 22),
    ("Pedro", 30),
    ("Luc√≠a", 25)
]

print(buscar_person(personas))

7. Iterar un diccionario e imprimir claves y valores.
mydict = {
"name": "Nova",
"age": 20,
"country": "Argentina",
"year": 2023
}

for c, v in mydict.items():
  print(c, v)













